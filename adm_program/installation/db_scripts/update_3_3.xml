<?xml version="1.0" encoding="UTF-8"?>
<update>
    <step id="10">UPDATE %PREFIX%_user_fields SET usf_name_intern = 'STREET' WHERE usf_name_intern = 'ADDRESS'</step>
    <step id="20">UPDATE %PREFIX%_user_fields SET usf_name = 'SYS_STREET' WHERE usf_name_intern = 'STREET' AND usf_name = 'SYS_ADDRESS'</step>
    <step id="30">UPDATE %PREFIX%_user_fields SET usf_name = 'SYS_STREET' WHERE usf_name_intern = 'STREET' AND usf_name = 'Adresse'</step>
    <step id="40">UPDATE %PREFIX%_user_fields SET usf_name = 'SYS_STREET' WHERE usf_name_intern = 'STREET' AND usf_name = 'Address'</step>
    <step id="50">ComponentUpdate::updateStepAddDefaultParticipantList</step>
    <step id="60">UPDATE %PREFIX%_roles SET rol_this_list_view = 1 WHERE rol_visible = 0 AND rol_this_list_view = 2</step>
    <step id="70">UPDATE %PREFIX%_roles SET rol_mail_this_role = 1 WHERE rol_visible = 0 AND rol_mail_this_role > 1</step>
    <step id="80">ALTER TABLE %PREFIX%_roles DROP COLUMN rol_visible</step>
    <step id="90">ComponentUpdate::updateStepEventCategory</step>
    <step id="100">ComponentUpdate::updateStepSetParticipantsApprovalStates</step>
    <step id="110">ALTER TABLE %PREFIX%_dates ADD COLUMN dat_allow_comments integer not null default 0</step>
    <step id="120">ALTER TABLE %PREFIX%_dates ADD COLUMN dat_additional_guests integer not null default 0</step>
    <step id="130">ALTER TABLE %PREFIX%_user_relation_types ADD COLUMN urt_edit_user boolean not null default '0'</step>
    <step id="140">ALTER TABLE %PREFIX%_dates ADD COLUMN dat_deadline timestamp null default null AFTER dat_max_members</step>
    <step id="150">ALTER TABLE %PREFIX%_user_fields ADD COLUMN usf_registration boolean not null default '0'</step>
    <step id="160">UPDATE %PREFIX%_user_fields SET usf_registration = 1 WHERE (usf_name_intern IN ('FIRST_NAME', 'LAST_NAME', 'EMAIL') OR usf_mandatory = 1) AND EXISTS (SELECT 1 FROM %PREFIX%_preferences WHERE prf_name = 'registration_mode' AND prf_value = '1' AND prf_org_id = 1)</step>
    <step id="170">UPDATE %PREFIX%_user_fields SET usf_registration = 1 WHERE EXISTS (SELECT 1 FROM %PREFIX%_preferences WHERE prf_name = 'registration_mode' AND prf_value = '2' AND prf_org_id = 1)</step>
    <step id="180" database="mysql">UPDATE %PREFIX%_preferences pr1 INNER JOIN %PREFIX%_preferences pr2 ON pr2.prf_name = 'registration_mode' AND pr2.prf_value = '0' AND pr1.prf_org_id = pr2.prf_org_id SET pr1.prf_value = '0' WHERE pr1.prf_name = 'registration_enable_module'</step>
    <step id="190" database="pgsql">UPDATE %PREFIX%_preferences pr1 SET prf_value = pr2.prf_value FROM %PREFIX%_preferences pr2 WHERE pr2.prf_name = 'registration_mode' AND pr1.prf_name = 'registration_enable_module' AND pr1.prf_org_id = pr2.prf_org_id</step>
    <step id="200">DELETE FROM %PREFIX%_preferences WHERE prf_name = 'registration_mode'</step>
    <step id="210">INSERT INTO %PREFIX%_roles_rights (ror_name_intern, ror_table)
                   VALUES ('category_view', 'adm_categories'),
                          ('event_participation', 'adm_dates')
    </step>
    <step id="220">ComponentUpdate::updateStepVisibleCategories</step>
    <step id="230">ALTER TABLE %PREFIX%_categories DROP COLUMN cat_hidden</step>
    <step id="240">ComponentUpdate::updateStepMigrateDatesRightsToFolderRights</step>
    <step id="250">DROP TABLE %PREFIX%_date_role</step>
    <step id="260">ComponentUpdate::updateStepAddGlobalCategories</step>
    <step id="270">UPDATE %PREFIX%_announcements SET ann_cat_id = (SELECT cat_id FROM %PREFIX%_categories WHERE cat_name_intern = 'ANN_ALL_ORGANIZATIONS') WHERE ann_global = 1</step>
    <step id="280">UPDATE %PREFIX%_dates SET dat_cat_id = (SELECT cat_id FROM %PREFIX%_categories WHERE cat_name_intern = 'DAT_ALL_ORGANIZATIONS') WHERE dat_global = 1</step>
    <step id="290">ALTER TABLE %PREFIX%_announcements DROP COLUMN ann_global</step>
    <step id="300">ALTER TABLE %PREFIX%_dates DROP COLUMN dat_global</step>
    <step id="310">DELETE FROM %PREFIX%_preferences WHERE prf_name = 'enable_inventory_module'</step>
    <step id="320">DELETE FROM %PREFIX%_categories WHERE cat_type = 'INF'</step>
    <step id="330">ALTER TABLE %PREFIX%_roles DROP COLUMN rol_inventory</step>
    <step id="340">DROP TABLE IF EXISTS %PREFIX%_invent_fields CASCADE</step>
    <step id="350">DROP TABLE IF EXISTS %PREFIX%_invent_data CASCADE</step>
    <step id="360">DROP TABLE IF EXISTS %PREFIX%_invent CASCADE</step>
    <step id="370">ALTER TABLE %PREFIX%_roles_rights ADD COLUMN ror_ror_id_parent integer unsigned</step>
    <step id="380">INSERT INTO %PREFIX%_roles_rights (ror_name_intern, ror_table, ror_ror_id_parent)
                   VALUES ('category_edit', 'adm_categories', (SELECT rr.ror_id FROM %PREFIX%_roles_rights rr WHERE rr.ror_name_intern = 'category_view'))</step>
    <step id="390">alter table %PREFIX%_roles_rights add constraint %PREFIX%_FK_ROR_ROR_PARENT foreign key (ror_ror_id_parent) references %PREFIX%_roles_rights (ror_id) on delete set null on update restrict</step>

    <step>stop</step>
</update>
